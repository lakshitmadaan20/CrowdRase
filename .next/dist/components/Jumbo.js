'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _defineProperty2 = require('babel-runtime/helpers/defineProperty');

var _defineProperty3 = _interopRequireDefault(_defineProperty2);

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _web = require('../ethereum/web3');

var _web2 = _interopRequireDefault(_web);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = 'D:\\blockchain projects\\kickstarter\\components\\Jumbo.js';


var Jumbo = function (_Component) {
  (0, _inherits3.default)(Jumbo, _Component);

  function Jumbo() {
    var _ref;

    var _temp, _this, _ret;

    (0, _classCallCheck3.default)(this, Jumbo);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = (0, _possibleConstructorReturn3.default)(this, (_ref = Jumbo.__proto__ || (0, _getPrototypeOf2.default)(Jumbo)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      account: '',
      balance: ''
    }, _temp), (0, _possibleConstructorReturn3.default)(_this, _ret);
  }

  (0, _createClass3.default)(Jumbo, [{
    key: 'componentDidMount',
    value: function () {
      var _ref2 = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee() {
        var _this2 = this;

        var accounts;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                _context.next = 2;
                return _web2.default.eth.getAccounts();

              case 2:
                accounts = _context.sent;

                this.setState({ account: accounts[0] });
                console.log(this.state.account);

                _context.next = 7;
                return _web2.default.eth.getBalance(this.account, function (err, balances) {
                  _this2.setState({ balance: balances });
                });

              case 7:
                console.log(this.state.balance);

              case 8:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function componentDidMount() {
        return _ref2.apply(this, arguments);
      }

      return componentDidMount;
    }()
  }, {
    key: 'render',
    value: function render() {
      var _ref3;

      return _react2.default.createElement('div', { className: 'container-fluid', __source: {
          fileName: _jsxFileName,
          lineNumber: 24
        }
      }, _react2.default.createElement('div', { className: 'jumbotron',
        style: (_ref3 = {
          background: '#c0c0aa;'
        }, (0, _defineProperty3.default)(_ref3, 'background', '-webkit-linear-gradient(to right, #1cefff, #c0c0aa);  /* Chrome 10-25, Safari 5.1-6'), (0, _defineProperty3.default)(_ref3, 'background', 'linear-gradient(to right, #1cefff, #c0c0aa); /* W3C, IE 10+/ Edge, Firefox 16+, Chrome 26+, Opera 12+, Safari 7+'), _ref3),
        __source: {
          fileName: _jsxFileName,
          lineNumber: 25
        }
      }, _react2.default.createElement('h2', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 32
        }
      }, 'Crowd Rase'), _react2.default.createElement('h4', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 33
        }
      }, 'A crowd funding platform Using Blockchain Technology'), _react2.default.createElement('h6', { className: 'text-mute', __source: {
          fileName: _jsxFileName,
          lineNumber: 34
        }
      }, 'Your Account Address: ', this.state.account, ' ')));
    }
  }]);

  return Jumbo;
}(_react.Component);

exports.default = Jumbo;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiSnVtYm8iLCJfQ29tcG9uZW50IiwiX3JlZiIsIl90ZW1wIiwiX3RoaXMiLCJfcmV0IiwiX2xlbiIsImFyZ3VtZW50cyIsImxlbmd0aCIsImFyZ3MiLCJBcnJheSIsIl9rZXkiLCJfX3Byb3RvX18iLCJjYWxsIiwiYXBwbHkiLCJjb25jYXQiLCJzdGF0ZSIsImFjY291bnQiLCJiYWxhbmNlIiwia2V5IiwidmFsdWUiLCJfcmVmMiIsIm1hcmsiLCJfY2FsbGVlIiwiX3RoaXMyIiwiYWNjb3VudHMiLCJ3cmFwIiwiX2NhbGxlZSQiLCJfY29udGV4dCIsInByZXYiLCJuZXh0IiwiZXRoIiwiZ2V0QWNjb3VudHMiLCJzZW50Iiwic2V0U3RhdGUiLCJjb25zb2xlIiwibG9nIiwiZ2V0QmFsYW5jZSIsImVyciIsImJhbGFuY2VzIiwic3RvcCIsImNvbXBvbmVudERpZE1vdW50IiwicmVuZGVyIiwiX3JlZjMiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NOYW1lIiwiX19zb3VyY2UiLCJmaWxlTmFtZSIsImxpbmVOdW1iZXIiLCJzdHlsZSIsImJhY2tncm91bmQiXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOzs7Ozs7QUFGQSxJQUFJQSxlQUFlLDREQUFuQjs7O0FBSUEsSUFBSUMsUUFBUSxVQUFVQyxVQUFWLEVBQXNCO0FBQ2hDLDBCQUFVRCxLQUFWLEVBQWlCQyxVQUFqQjs7QUFFQSxXQUFTRCxLQUFULEdBQWlCO0FBQ2YsUUFBSUUsSUFBSjs7QUFFQSxRQUFJQyxLQUFKLEVBQVdDLEtBQVgsRUFBa0JDLElBQWxCOztBQUVBLGtDQUFnQixJQUFoQixFQUFzQkwsS0FBdEI7O0FBRUEsU0FBSyxJQUFJTSxPQUFPQyxVQUFVQyxNQUFyQixFQUE2QkMsT0FBT0MsTUFBTUosSUFBTixD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