'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _regenerator = require('babel-runtime/regenerator');

var _regenerator2 = _interopRequireDefault(_regenerator);

var _asyncToGenerator2 = require('babel-runtime/helpers/asyncToGenerator');

var _asyncToGenerator3 = _interopRequireDefault(_asyncToGenerator2);

var _getPrototypeOf = require('babel-runtime/core-js/object/get-prototype-of');

var _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);

var _classCallCheck2 = require('babel-runtime/helpers/classCallCheck');

var _classCallCheck3 = _interopRequireDefault(_classCallCheck2);

var _createClass2 = require('babel-runtime/helpers/createClass');

var _createClass3 = _interopRequireDefault(_createClass2);

var _possibleConstructorReturn2 = require('babel-runtime/helpers/possibleConstructorReturn');

var _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);

var _inherits2 = require('babel-runtime/helpers/inherits');

var _inherits3 = _interopRequireDefault(_inherits2);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _semanticUiReact = require('semantic-ui-react');

var _Layout = require('../../components/Layout');

var _Layout2 = _interopRequireDefault(_Layout);

var _campaign = require('../../ethereum/campaign');

var _campaign2 = _interopRequireDefault(_campaign);

var _web = require('../../ethereum/web3');

var _web2 = _interopRequireDefault(_web);

var _ContributeForm = require('../../components/ContributeForm');

var _ContributeForm2 = _interopRequireDefault(_ContributeForm);

var _routes = require('../../routes');

var _Donation = require('../../components/Donation');

var _Donation2 = _interopRequireDefault(_Donation);

var _reactChartjs = require('react-chartjs-2');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var _jsxFileName = 'D:\\blockchain projects\\kickstarter\\pages\\campaigns\\show.js?entry';


var CampaignShow = function (_Component) {
  (0, _inherits3.default)(CampaignShow, _Component);

  function CampaignShow() {
    (0, _classCallCheck3.default)(this, CampaignShow);

    return (0, _possibleConstructorReturn3.default)(this, (CampaignShow.__proto__ || (0, _getPrototypeOf2.default)(CampaignShow)).apply(this, arguments));
  }

  (0, _createClass3.default)(CampaignShow, [{
    key: 'renderCards',
    value: function renderCards() {
      var _props = this.props,
          balance = _props.balance,
          manager = _props.manager,
          minimumContribution = _props.minimumContribution,
          requestsCount = _props.requestsCount,
          approversCount = _props.approversCount,
          campaignOwner = _props.campaignOwner,
          goal = _props.goal,
          name = _props.name,
          description = _props.description;

      var items = [{
        header: manager,
        meta: 'Address of Manager',
        description: 'The manager created this campaign and can create requests to withdraw money',
        style: { overflowWrap: 'break-word' }
      }, {
        header: minimumContribution,
        meta: 'Minimum Contribution (wei)',
        description: 'You must contribute at least this much wei to become an approver'
      }, {
        header: requestsCount,
        meta: 'Number of Requests',
        description: 'A request tries to withdraw money from the contract. Requests must be approved by approvers'
      }, {
        header: approversCount,
        meta: 'Number of Approvers',
        description: 'Number of people who have already donated to this campaign'
      }, {
        header: _web2.default.utils.fromWei(balance, 'ether'),
        meta: 'Campaign Balance (ether)',
        description: 'The balance is how much money this campaign has left to spend.'
      }, {
        header: campaignOwner,
        description: 'Name of the Owner of campaign'
      }, {
        header: goal,
        description: 'Campaign Goal'
      }, {
        header: name,
        description: 'Name of the campaign'

      }, {
        header: description,
        description: 'Campaign Description'
      }];

      return _react2.default.createElement(_semanticUiReact.Card.Group, { items: items, __source: {
          fileName: _jsxFileName,
          lineNumber: 96
        }
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(_Layout2.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 102
        }
      }, _react2.default.createElement('h1', { className: 'bg-secondary text-center text-white', __source: {
          fileName: _jsxFileName,
          lineNumber: 103
        }
      }, 'Campaign Details'), _react2.default.createElement('br', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 104
        }
      }), _react2.default.createElement(_semanticUiReact.Grid, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 105
        }
      }, _react2.default.createElement(_semanticUiReact.Grid.Row, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 106
        }
      }, _react2.default.createElement(_semanticUiReact.Grid.Column, { width: 10, __source: {
          fileName: _jsxFileName,
          lineNumber: 107
        }
      }, this.renderCards()), _react2.default.createElement(_semanticUiReact.Grid.Column, { width: 6, __source: {
          fileName: _jsxFileName,
          lineNumber: 108
        }
      }, _react2.default.createElement(_ContributeForm2.default, { address: this.props.address, __source: {
          fileName: _jsxFileName,
          lineNumber: 109
        }
      }), _react2.default.createElement('br', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 110
        }
      }), _react2.default.createElement('hr', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 111
        }
      }), _react2.default.createElement('div', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 112
        }
      }, _react2.default.createElement('h2', { className: 'text-center', __source: {
          fileName: _jsxFileName,
          lineNumber: 113
        }
      }, 'Perks Of Donating'), _react2.default.createElement('br', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 114
        }
      }), _react2.default.createElement('div', { className: 'jumbotron', __source: {
          fileName: _jsxFileName,
          lineNumber: 115
        }
      }, _react2.default.createElement(_Donation2.default, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 116
        }
      }))))), _react2.default.createElement(_semanticUiReact.Grid.Row, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 123
        }
      }, _react2.default.createElement(_semanticUiReact.Grid.Column, {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 124
        }
      }, _react2.default.createElement(_routes.Link, { route: '/campaigns/' + this.props.address + '/requests', __source: {
          fileName: _jsxFileName,
          lineNumber: 125
        }
      }, _react2.default.createElement('a', {
        __source: {
          fileName: _jsxFileName,
          lineNumber: 126
        }
      }, _react2.default.createElement(_semanticUiReact.Button, { className: 'btn btn-block', inverted: true, color: 'green', __source: {
          fileName: _jsxFileName,
          lineNumber: 127
        }
      }, 'View Requests')))))));
    }
  }], [{
    key: 'getInitialProps',
    value: function () {
      var _ref = (0, _asyncToGenerator3.default)( /*#__PURE__*/_regenerator2.default.mark(function _callee(props) {
        var campaign, summary;
        return _regenerator2.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                campaign = (0, _campaign2.default)(props.query.address);
                _context.next = 3;
                return campaign.methods.getSummary().call();

              case 3:
                summary = _context.sent;
                return _context.abrupt('return', {
                  address: props.query.address,
                  minimumContribution: summary[0],
                  balance: summary[1],
                  requestsCount: summary[2],
                  approversCount: summary[3],
                  manager: summary[4],
                  campaignOwner: summary[5],
                  goal: summary[6],
                  name: summary[7],
                  description: summary[8]
                });

              case 5:
              case 'end':
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function getInitialProps(_x) {
        return _ref.apply(this, arguments);
      }

      return getInitialProps;
    }()
  }]);

  return CampaignShow;
}(_react.Component);

exports.default = CampaignShow;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiQ2FtcGFpZ25TaG93IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXJDYXJkcyIsIl9wcm9wcyIsInByb3BzIiwiYmFsYW5jZSIsIm1hbmFnZXIiLCJtaW5pbXVtQ29udHJpYnV0aW9uIiwicmVxdWVzdHNDb3VudCIsImFwcHJvdmVyc0NvdW50IiwiY2FtcGFpZ25Pd25lciIsImdvYWwiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJpdGVtcyIsImhlYWRlciIsIm1ldGEiLCJzdHlsZSIsIm92ZXJmbG93V3JhcCIsInV0aWxzIiwiZnJvbVdlaSIsImNyZWF0ZUVsZW1lbnQiLCJHcm91cCIsIl9fc291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwicmVuZGVyIiwiY2xhc3NOYW1lIiwiUm93IiwiQ29sdW1uIiwid2lkdGgiLCJhZGRyZXNzIiwicm91dGUiLCJpbnZlcnRlZCIsImNvbG9yIiwiX3JlZiIsIm1hcmsiLCJfY2FsbGVlIiwiY2FtcGFpZ24iLCJzdW1tYXJ5Iiwid3JhcCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJwcmV2IiwibmV4dCIsInF1ZXJ5IiwibWV0aG9kcyIsImdldFN1bW1hcnkiLCJjYWxsIiwic2VudCIsImFicnVwdCIsInN0b3AiLCJnZXRJbml0aWFsUHJvcHMiLCJfeCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7OztBQVRBLElBQUlBLGVBQWUsdUVBQW5COzs7QUFXQSxJQUFJQyxlQUFlLFVBQVVDLFVBQVYsRUFBc0I7QUFDdkMsMEJBQVVELFlBQVYsRUFBd0JDLFVBQXhCOztBQUVBLFdB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LG1CQUFLLENBQUw7QUFDQSxtQkFBSyxLQUFMO0FBQ0UsdUJBQU9HLFNBQVNTLElBQVQsRUFBUDtBQXZCSjtBQXlCRDtBQUNGLFNBNUJNLEVBNEJKZCxPQTVCSSxFQTRCSyxJQTVCTCxDQUFQO0FBNkJELE9BL0IwQyxDQUFoQyxDQUFYOztBQWlDQSxlQUFTZSxlQUFULENBQXlCQyxFQUF6QixFQUE2QjtBQUMzQixlQUFPbEIsS0FBS3JDLEtBQUwsQ0FBVyxJQUFYLEVBQWlCQyxTQUFqQixDQUFQO0FBQ0Q7O0FBRUQsYUFBT3FELGVBQVA7QUFDRCxLQXZDTTtBQUZKLEdBQUQsQ0EzTko7O0FBdVFBLFNBQU96RCxZQUFQO0FBQ0QsQ0FqUmtCLGtCQUFuQjs7a0JBbVJlQSxZIiwiZmlsZSI6InVua25vd24iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgX3JlZ2VuZXJhdG9yUnVudGltZSBmcm9tICdiYWJlbC1ydW50aW1lL3JlZ2VuZXJhdG9yJztcbmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICdiYWJlbC1ydW50aW1lL2hlbHBlcnMvYXN5bmNUb0dlbmVyYXRvcic7XG5pbXBvcnQgX09iamVjdCRnZXRQcm90b3R5cGVPZiBmcm9tICdiYWJlbC1ydW50aW1lL2NvcmUtanMvb2JqZWN0L2dldC1wcm90b3R5cGUtb2YnO1xuaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY2xhc3NDYWxsQ2hlY2snO1xuaW1wb3J0IF9jcmVhdGVDbGFzcyBmcm9tICdiYWJlbC1ydW50aW1lL2hlbHBlcnMvY3JlYXRlQ2xhc3MnO1xuaW1wb3J0IF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuIGZyb20gJ2JhYmVsLXJ1bnRpbWUvaGVscGVycy9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuJztcbmltcG9ydCBfaW5oZXJpdHMgZnJvbSAnYmFiZWwtcnVudGltZS9oZWxwZXJzL2luaGVyaXRzJztcbnZhciBfanN4RmlsZU5hbWUgPSAnRDpcXFxcYmxvY2tjaGFpbiBwcm9qZWN0c1xcXFxraWNrc3RhcnRlclxcXFxwYWdlc1xcXFxjYW1wYWlnbnNcXFxcc2hvdy5qcz9lbnRyeSc7XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgQ2FyZCwgR3JpZCwgQnV0dG9uIH0gZnJvbSAnc2VtYW50aWMtdWktcmVhY3QnO1xuaW1wb3J0IExheW91dCBmcm9tICcuLi8uLi9jb21wb25lbnRzL0xheW91dCc7XG5pbXBvcnQgQ2FtcGFpZ24gZnJvbSAnLi4vLi4vZXRoZXJldW0vY2FtcGFpZ24nO1xuaW1wb3J0IHdlYjMgZnJvbSAnLi4vLi4vZXRoZXJldW0vd2ViMyc7XG5pbXBvcnQgQ29udHJpYnV0ZUZvcm0gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Db250cmlidXRlRm9ybSc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAnLi4vLi4vcm91dGVzJztcbmltcG9ydCBEb25hdGlvbiBmcm9tICcuLi8uLi9jb21wb25lbnRzL0RvbmF0aW9uJztcbmltcG9ydCB7IEJhciwgRG91Z2hudXQgfSBmcm9tICdyZWFjdC1jaGFydGpzLTInO1xuXG52YXIgQ2FtcGFpZ25TaG93ID0gZnVuY3Rpb24gKF9Db21wb25lbnQpIHtcbiAgX2luaGVyaXRzKENhbXBhaWduU2hvdywgX0NvbXBvbmVudCk7XG5cbiAgZnVuY3Rpb24gQ2FtcGFpZ25TaG93KCkge1xuICAgIF9jbGFzc0NhbGxDaGVjayh0aGlzLCBDYW1wYWlnblNob3cpO1xuXG4gICAgcmV0dXJuIF9wb3NzaWJsZUNvbnN0cnVjdG9yUmV0dXJuKHRoaXMsIChDYW1wYWlnblNob3cuX19wcm90b19fIHx8IF9PYmplY3QkZ2V0UHJvdG90eXBlT2YoQ2FtcGFpZ25TaG93KSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7XG4gIH1cblxuICBfY3JlYXRlQ2xhc3MoQ2FtcGFpZ25TaG93LCBbe1xuICAgIGtleTogJ3JlbmRlckNhcmRzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyQ2FyZHMoKSB7XG4gICAgICB2YXIgX3Byb3BzID0gdGhpcy5wcm9wcyxcbiAgICAgICAgICBiYWxhbmNlID0gX3Byb3BzLmJhbGFuY2UsXG4gICAgICAgICAgbWFuYWdlciA9IF9wcm9wcy5tYW5hZ2VyLFxuICAgICAgICAgIG1pbmltdW1Db250cmlidXRpb24gPSBfcHJvcHMubWluaW11bUNvbnRyaWJ1dGlvbixcbiAgICAgICAgICByZXF1ZXN0c0NvdW50ID0gX3Byb3BzLnJlcXVlc3RzQ291bnQsXG4gICAgICAgICAgYXBwcm92ZXJzQ291bnQgPSBfcHJvcHMuYXBwcm92ZXJzQ291bnQsXG4gICAgICAgICAgY2FtcGFpZ25Pd25lciA9IF9wcm9wcy5jYW1wYWlnbk93bmVyLFxuICAgICAgICAgIGdvYWwgPSBfcHJvcHMuZ29hbCxcbiAgICAgICAgICBuYW1lID0gX3Byb3BzLm5hbWUsXG4gICAgICAgICAgZGVzY3JpcHRpb24gPSBfcHJvcHMuZGVzY3JpcHRpb247XG5cblxuICAgICAgdmFyIGl0ZW1zID0gW3tcbiAgICAgICAgaGVhZGVyOiBtYW5hZ2VyLFxuICAgICAgICBtZXRhOiAnQWRkcmVzcyBvZiBNYW5hZ2VyJyxcbiAgICAgICAgZGVzY3JpcHRpb246ICdUaGUgbWFuYWdlciBjcmVhdGVkIHRoaXMgY2FtcGFpZ24gYW5kIGNhbiBjcmVhdGUgcmVxdWVzdHMgdG8gd2l0aGRyYXcgbW9uZXknLFxuICAgICAgICBzdHlsZTogeyBvdmVyZmxvd1dyYXA6ICdicmVhay13b3JkJyB9XG4gICAgICB9LCB7XG4gICAgICAgIGhlYWRlcjogbWluaW11bUNvbnRyaWJ1dGlvbixcbiAgICAgICAgbWV0YTogJ01pbmltdW0gQ29udHJpYnV0aW9uICh3ZWkpJyxcbiAgICAgICAgZGVzY3JpcHRpb246ICdZb3UgbXVzdCBjb250cmlidXRlIGF0IGxlYXN0IHRoaXMgbXVjaCB3ZWkgdG8gYmVjb21lIGFuIGFwcHJvdmVyJ1xuICAgICAgfSwge1xuICAgICAgICBoZWFkZXI6IHJlcXVlc3RzQ291bnQsXG4gICAgICAgIG1ldGE6ICdOdW1iZXIgb2YgUmVxdWVzdHMnLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ0EgcmVxdWVzdCB0cmllcyB0byB3aXRoZHJhdyBtb25leSBmcm9tIHRoZSBjb250cmFjdC4gUmVxdWVzdHMgbXVzdCBiZSBhcHByb3ZlZCBieSBhcHByb3ZlcnMnXG4gICAgICB9LCB7XG4gICAgICAgIGhlYWRlcjogYXBwcm92ZXJzQ291bnQsXG4gICAgICAgIG1ldGE6ICdOdW1iZXIgb2YgQXBwcm92ZXJzJyxcbiAgICAgICAgZGVzY3JpcHRpb246ICdOdW1iZXIgb2YgcGVvcGxlIHdobyBoYXZlIGFscmVhZHkgZG9uYXRlZCB0byB0aGlzIGNhbXBhaWduJ1xuICAgICAgfSwge1xuICAgICAgICBoZWFkZXI6IHdlYjMudXRpbHMuZnJvbVdlaShiYWxhbmNlLCAnZXRoZXInKSxcbiAgICAgICAgbWV0YTogJ0NhbXBhaWduIEJhbGFuY2UgKGV0aGVyKScsXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnVGhlIGJhbGFuY2UgaXMgaG93IG11Y2ggbW9uZXkgdGhpcyBjYW1wYWlnbiBoYXMgbGVmdCB0byBzcGVuZC4nXG4gICAgICB9LCB7XG4gICAgICAgIGhlYWRlcjogY2FtcGFpZ25Pd25lcixcbiAgICAgICAgZGVzY3JpcHRpb246ICdOYW1lIG9mIHRoZSBPd25lciBvZiBjYW1wYWlnbidcbiAgICAgIH0sIHtcbiAgICAgICAgaGVhZGVyOiBnb2FsLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ0NhbXBhaWduIEdvYWwnXG4gICAgICB9LCB7XG4gICAgICAgIGhlYWRlcjogbmFtZSxcbiAgICAgICAgZGVzY3JpcHRpb246ICdOYW1lIG9mIHRoZSBjYW1wYWlnbidcblxuICAgICAgfSwge1xuICAgICAgICBoZWFkZXI6IGRlc2NyaXB0aW9uLFxuICAgICAgICBkZXNjcmlwdGlvbjogJ0NhbXBhaWduIERlc2NyaXB0aW9uJ1xuICAgICAgfV07XG5cbiAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KENhcmQuR3JvdXAsIHsgaXRlbXM6IGl0ZW1zLCBfX3NvdXJjZToge1xuICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgbGluZU51bWJlcjogOTZcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuICB9LCB7XG4gICAga2V5OiAncmVuZGVyJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gcmVuZGVyKCkge1xuICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgIExheW91dCxcbiAgICAgICAge1xuICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgbGluZU51bWJlcjogMTAyXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICdoMScsXG4gICAgICAgICAgeyBjbGFzc05hbWU6ICdiZy1zZWNvbmRhcnkgdGV4dC1jZW50ZXIgdGV4dC13aGl0ZScsIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDEwM1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgJ0NhbXBhaWduIERldGFpbHMnXG4gICAgICAgICksXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ2JyJywge1xuICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgbGluZU51bWJlcjogMTA0XG4gICAgICAgICAgfVxuICAgICAgICB9KSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICBHcmlkLFxuICAgICAgICAgIHtcbiAgICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDEwNVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH0sXG4gICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgIEdyaWQuUm93LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgbGluZU51bWJlcjogMTA2XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICBHcmlkLkNvbHVtbixcbiAgICAgICAgICAgICAgeyB3aWR0aDogMTAsIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgbGluZU51bWJlcjogMTA3XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICB0aGlzLnJlbmRlckNhcmRzKClcbiAgICAgICAgICAgICksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICBHcmlkLkNvbHVtbixcbiAgICAgICAgICAgICAgeyB3aWR0aDogNiwgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAxMDhcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udHJpYnV0ZUZvcm0sIHsgYWRkcmVzczogdGhpcy5wcm9wcy5hZGRyZXNzLCBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDEwOVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoJ2JyJywge1xuICAgICAgICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgbGluZU51bWJlcjogMTEwXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgnaHInLCB7XG4gICAgICAgICAgICAgICAgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAxMTFcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICdkaXYnLFxuICAgICAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDExMlxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgICAgICAgICdoMicsXG4gICAgICAgICAgICAgICAgICB7IGNsYXNzTmFtZTogJ3RleHQtY2VudGVyJywgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDExM1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgJ1BlcmtzIE9mIERvbmF0aW5nJ1xuICAgICAgICAgICAgICAgICksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudCgnYnInLCB7XG4gICAgICAgICAgICAgICAgICBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAxMTRcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgICAgJ2RpdicsXG4gICAgICAgICAgICAgICAgICB7IGNsYXNzTmFtZTogJ2p1bWJvdHJvbicsIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAxMTVcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9uYXRpb24sIHtcbiAgICAgICAgICAgICAgICAgICAgX19zb3VyY2U6IHtcbiAgICAgICAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDExNlxuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgICAgIClcbiAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgKVxuICAgICAgICAgICksXG4gICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcbiAgICAgICAgICAgIEdyaWQuUm93LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgIGZpbGVOYW1lOiBfanN4RmlsZU5hbWUsXG4gICAgICAgICAgICAgICAgbGluZU51bWJlcjogMTIzXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICBHcmlkLkNvbHVtbixcbiAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgbGluZU51bWJlcjogMTI0XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFxuICAgICAgICAgICAgICAgIExpbmssXG4gICAgICAgICAgICAgICAgeyByb3V0ZTogJy9jYW1wYWlnbnMvJyArIHRoaXMucHJvcHMuYWRkcmVzcyArICcvcmVxdWVzdHMnLCBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgICAgICBmaWxlTmFtZTogX2pzeEZpbGVOYW1lLFxuICAgICAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAxMjVcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAnYScsXG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIF9fc291cmNlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICBsaW5lTnVtYmVyOiAxMjZcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXG4gICAgICAgICAgICAgICAgICAgIEJ1dHRvbixcbiAgICAgICAgICAgICAgICAgICAgeyBjbGFzc05hbWU6ICdidG4gYnRuLWJsb2NrJywgaW52ZXJ0ZWQ6IHRydWUsIGNvbG9yOiAnZ3JlZW4nLCBfX3NvdXJjZToge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmlsZU5hbWU6IF9qc3hGaWxlTmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgIGxpbmVOdW1iZXI6IDEyN1xuICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgICAgICAgICAgJ1ZpZXcgUmVxdWVzdHMnXG4gICAgICAgICAgICAgICAgICApXG4gICAgICAgICAgICAgICAgKVxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICApXG4gICAgICAgICAgKVxuICAgICAgICApXG4gICAgICApO1xuICAgIH1cbiAgfV0sIFt7XG4gICAga2V5OiAnZ2V0SW5pdGlhbFByb3BzJyxcbiAgICB2YWx1ZTogZnVuY3Rpb24gKCkge1xuICAgICAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL19yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHByb3BzKSB7XG4gICAgICAgIHZhciBjYW1wYWlnbiwgc3VtbWFyeTtcbiAgICAgICAgcmV0dXJuIF9yZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkge1xuICAgICAgICAgIHdoaWxlICgxKSB7XG4gICAgICAgICAgICBzd2l0Y2ggKF9jb250ZXh0LnByZXYgPSBfY29udGV4dC5uZXh0KSB7XG4gICAgICAgICAgICAgIGNhc2UgMDpcbiAgICAgICAgICAgICAgICBjYW1wYWlnbiA9IENhbXBhaWduKHByb3BzLnF1ZXJ5LmFkZHJlc3MpO1xuICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzO1xuICAgICAgICAgICAgICAgIHJldHVybiBjYW1wYWlnbi5tZXRob2RzLmdldFN1bW1hcnkoKS5jYWxsKCk7XG5cbiAgICAgICAgICAgICAgY2FzZSAzOlxuICAgICAgICAgICAgICAgIHN1bW1hcnkgPSBfY29udGV4dC5zZW50O1xuICAgICAgICAgICAgICAgIHJldHVybiBfY29udGV4dC5hYnJ1cHQoJ3JldHVybicsIHtcbiAgICAgICAgICAgICAgICAgIGFkZHJlc3M6IHByb3BzLnF1ZXJ5LmFkZHJlc3MsXG4gICAgICAgICAgICAgICAgICBtaW5pbXVtQ29udHJpYnV0aW9uOiBzdW1tYXJ5WzBdLFxuICAgICAgICAgICAgICAgICAgYmFsYW5jZTogc3VtbWFyeVsxXSxcbiAgICAgICAgICAgICAgICAgIHJlcXVlc3RzQ291bnQ6IHN1bW1hcnlbMl0sXG4gICAgICAgICAgICAgICAgICBhcHByb3ZlcnNDb3VudDogc3VtbWFyeVszXSxcbiAgICAgICAgICAgICAgICAgIG1hbmFnZXI6IHN1bW1hcnlbNF0sXG4gICAgICAgICAgICAgICAgICBjYW1wYWlnbk93bmVyOiBzdW1tYXJ5WzVdLFxuICAgICAgICAgICAgICAgICAgZ29hbDogc3VtbWFyeVs2XSxcbiAgICAgICAgICAgICAgICAgIG5hbWU6IHN1bW1hcnlbN10sXG4gICAgICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogc3VtbWFyeVs4XVxuICAgICAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICAgIGNhc2UgNTpcbiAgICAgICAgICAgICAgY2FzZSAnZW5kJzpcbiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSwgX2NhbGxlZSwgdGhpcyk7XG4gICAgICB9KSk7XG5cbiAgICAgIGZ1bmN0aW9uIGdldEluaXRpYWxQcm9wcyhfeCkge1xuICAgICAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfVxuXG4gICAgICByZXR1cm4gZ2V0SW5pdGlhbFByb3BzO1xuICAgIH0oKVxuICB9XSk7XG5cbiAgcmV0dXJuIENhbXBhaWduU2hvdztcbn0oQ29tcG9uZW50KTtcblxuZXhwb3J0IGRlZmF1bHQgQ2FtcGFpZ25TaG93OyJdfQ==
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVua25vd24iXSwibmFtZXMiOlsiX2pzeEZpbGVOYW1lIiwiQ2FtcGFpZ25TaG93IiwiX0NvbXBvbmVudCIsIl9fcHJvdG9fXyIsImFwcGx5IiwiYXJndW1lbnRzIiwia2V5IiwidmFsdWUiLCJyZW5kZXJDYXJkcyIsIl9wcm9wcyIsInByb3BzIiwiYmFsYW5jZSIsIm1hbmFnZXIiLCJtaW5pbXVtQ29udHJpYnV0aW9uIiwicmVxdWVzdHNDb3VudCIsImFwcHJvdmVyc0NvdW50IiwiY2FtcGFpZ25Pd25lciIsImdvYWwiLCJuYW1lIiwiZGVzY3JpcHRpb24iLCJpdGVtcyIsImhlYWRlciIsIm1ldGEiLCJzdHlsZSIsIm92ZXJmbG93V3JhcCIsInV0aWxzIiwiZnJvbVdlaSIsImNyZWF0ZUVsZW1lbnQiLCJHcm91cCIsIl9fc291cmNlIiwiZmlsZU5hbWUiLCJsaW5lTnVtYmVyIiwicmVuZGVyIiwiY2xhc3NOYW1lIiwiUm93IiwiQ29sdW1uIiwid2lkdGgiLCJhZGRyZXNzIiwicm91dGUiLCJpbnZlcnRlZCIsImNvbG9yIiwiX3JlZiIsIm1hcmsiLCJfY2FsbGVlIiwiY2FtcGFpZ24iLCJzdW1tYXJ5Iiwid3JhcCIsIl9jYWxsZWUkIiwiX2NvbnRleHQiLCJwcmV2IiwibmV4dCIsInF1ZXJ5IiwibWV0aG9kcyIsImdldFN1bW1hcnkiLCJjYWxsIiwic2VudCIsImFicnVwdCIsInN0b3AiLCJnZXRJbml0aWFsUHJvcHMiLCJfeCJdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFFQTs7OztBQUNBOztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7O0FBQ0E7Ozs7QUFDQTs7OztBQVRBLElBQUlBLGVBQWUsdUVBQW5COzs7QUFXQSxJQUFJQyxlQUFlLFVBQVVDLFVBQVYsRUFBc0I7QUFDdkMsMEJBQVVELFlBQVYsRUFBd0JDLFVBQXhCOztBQUVBLFdB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